import{_ as t,o as e,c as o,R as a}from"./chunks/framework.pKk-Oq-P.js";const m=JSON.parse('{"title":"Feature support","description":"","frontmatter":{},"headers":[],"relativePath":"about/features.md","filePath":"about/features.md","lastUpdated":1702673998000}'),r={name:"about/features.md"},i=a('<h1 id="feature-support" tabindex="-1">Feature support <a class="header-anchor" href="#feature-support" aria-label="Permalink to &quot;Feature support&quot;">​</a></h1><p>Very often we get questions like &quot;Does Glyphr Studio support [something]&quot;. Font files have a huge list of features, and since Glyphr Studio is designed for beginners and hobbyists, only a small set of font features are supported.</p><p><strong>For the supported features, be sure to read the the Import / Export article for more detailed information.</strong></p><h2 id="what-is-supported" tabindex="-1">What <em>is</em> supported <a class="header-anchor" href="#what-is-supported" aria-label="Permalink to &quot;What _is_ supported&quot;">​</a></h2><ul><li>Kerning (Horizontal)</li><li>Ligatures</li><li>Editing any character in Unicode <ul><li>This includes any character on any Unicode plane. Planes 0 through 3 (characters <code>U+0</code> through <code>U+32FFF</code>) have range names and can be searched for and added in the Settings &gt; Project page. Additional planes (characters <code>U+40000</code> through <code>U+10FFFF</code>) are either unassigned or private / supplementary use areas. These can be added as custom ranges in Glyphr Studio.</li><li>This includes whitespace characters and control characters</li></ul></li></ul><h3 id="supported-import-font-formats" tabindex="-1">Supported import font formats <a class="header-anchor" href="#supported-import-font-formats" aria-label="Permalink to &quot;Supported import font formats&quot;">​</a></h3><ul><li>OTF</li><li>TTF</li><li>WOFF</li><li>SVG Font</li></ul><h3 id="supported-export-font-formats" tabindex="-1">Supported export font formats <a class="header-anchor" href="#supported-export-font-formats" aria-label="Permalink to &quot;Supported export font formats&quot;">​</a></h3><ul><li>OTF</li><li>SVG Font</li></ul><h2 id="what-is-not-supported" tabindex="-1">What <em>is not</em> supported <a class="header-anchor" href="#what-is-not-supported" aria-label="Permalink to &quot;What _is not_ supported&quot;">​</a></h2><ul><li>Color fonts</li><li>Variable fonts</li><li>Multiple masters / interpolation</li><li>Right-to-left (RTL) fonts</li><li>Vertical fonts / Vertical kerning</li><li>Contextual alternates / Stylistic alternates</li><li>OpenType font features or variants</li></ul><h3 id="not-supported-export-font-formats" tabindex="-1">Not supported export font formats <a class="header-anchor" href="#not-supported-export-font-formats" aria-label="Permalink to &quot;Not supported export font formats&quot;">​</a></h3><ul><li>TTF</li><li>WOFF</li><li>UFO</li><li>(everything else)</li></ul><h2 id="questions-or-comments" tabindex="-1">Questions or comments? <a class="header-anchor" href="#questions-or-comments" aria-label="Permalink to &quot;Questions or comments?&quot;">​</a></h2><p><a href="mailto:mail@glyphrstudio.com" target="_blank" rel="noreferrer">mail@glyphrstudio.com</a></p>',15),s=[i];function l(n,p,u,d,h,c){return e(),o("div",null,s)}const _=t(r,[["render",l]]);export{m as __pageData,_ as default};
